{
    "stores": {

        "AC_STORE": {
            "completeness_checking": {
                "backend": {
                    "memory": {}
                },
                "cas_store": {
                    "ref_store": {
                        "name": "CAS_STORE"
                    }
                }
            }
        },
        "CAS_MEM_STORE" : {
            "memory": {
                "eviction_policy": {
                    // "max_seconds": 10, // 10 seconds
                    // "max_bytes": 10000000000,
                    "max_count": 40,
                    // "evict_bytes": 134217728 // 128mib.
                }
            }
        },
        "CAS_STORE": {
                    // "ref_store": {
                    //     "name": "CAS_MEM_STORE"
                    // }
            "existence_cache": {
                "backend": {
                    "ref_store": {
                        "name": "CAS_MEM_STORE"
                    }
                },
                "eviction_policy": {
                    "max_seconds": 10, // 10 seconds
                    // "max_count": 1000000
                }
            }
        },

        "WORKER_FAST_SLOW_STORE": {
            "fast_slow": {
              // "fast" must be a "filesystem" store because the worker uses it to make
              // hardlinks on disk to a directory where the jobs are running.
              "fast": {
                "filesystem": {
                  "content_path": "/tmp/nativelink/data-worker-test/content_path-cas",
                  "temp_path": "/tmp/nativelink/data-worker-test/tmp_path-cas",
                  "eviction_policy": {
                    // 10gb.
                    "max_bytes": 10000000000,
                  }
                }
              },
              "slow": {
                "ref_store": {
                    "name": "CAS_STORE"
                }
              }
            }
          }
    },

    "schedulers": {
        "MAIN_SCHEDULER": {
          "simple": {
            "supported_platform_properties": {
              "cpu_count": "minimum",
            }
          }
        }
      },

      "workers": [{
        "local": {
          "worker_api_endpoint": {
            "uri": "grpc://127.0.0.1:50061",
          },
          "cas_fast_slow_store": "WORKER_FAST_SLOW_STORE",
          "upload_action_result": {
            "ac_store": "AC_STORE",
          },
          "work_directory": "/tmp/nativelink/work",
          "platform_properties": {
            "cpu_count": {
              "values": ["16"],
            },
          }
        }
      }],


    "servers": [
        {
            // Non-public apis. We re-export the CAS services so we don't need to go through
            // an external load balancer.
            "listener": {
                "http": {
                    "socket_address": "0.0.0.0:50051",
                    "advanced_http": {
                        "http2_keep_alive_interval": 10
                    }
                }
            },
            "services": {
                "experimental_prometheus": {
                    "path": "/metrics"
                },
                "cas": {
                    "main": {
                        "cas_store": "CAS_STORE"
                    }
                },
                "ac": {
                    "main": {
                        "ac_store": "AC_STORE"
                    }
                },
                "capabilities": {
                    "main": {
                        "remote_execution": {
                            "scheduler": "MAIN_SCHEDULER",
                          }
                    }
                },
                "bytestream": {
                    "cas_stores": {
                        "main": "CAS_STORE"
                    }
                },

                "execution": {
                    "main": {
                      "cas_store": "CAS_STORE",
                      "scheduler": "MAIN_SCHEDULER",
                    }
                  },

            }
        },
        {
            "name": "private_workers_servers",
            "listener": {
              "http": {
                "socket_address": "0.0.0.0:50061"
              }
            },
            "services": {
              "experimental_prometheus": {
                "path": "/metrics"
              },
              // Note: This should be served on a different port, because it has
              // a different permission set than the other services.
              // In other words, this service is a backend api. The ones above
              // are a frontend api.
              "worker_api": {
                "scheduler": "MAIN_SCHEDULER",
              },
              "admin": {}
            }
          }
    ],
    "global": {
        "max_open_files": 100
    }
}
